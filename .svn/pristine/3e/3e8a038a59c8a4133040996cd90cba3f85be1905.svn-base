package com.zngk.common;

import java.sql.Timestamp;
import java.sql.Types;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import com.zngk.dao.BkspDao;
import com.zngk.entity.InsertDataToFh;
import com.zngk.entity.User;
/**
 * 往烽火插入数据
 * @author 熊铸
 *ZNGK
 * 2017年10月30日
 */
@Service
public class InsertDataToFhUtils {
	@Resource(name="fhzzJdbcTemplate")
	private JdbcTemplate fhzzJdbcTemplate;
	
	@Resource(name="jdbcTemplate")
    private JdbcTemplate jdbcTemplate;
	
	@Autowired
	BkspDao bkspDao;
	
	/**
	 *整体插入
	 * @author 熊铸
	 *  2017年10月30日
	 */
	public boolean insertData(InsertDataToFh insertDataToFh){
		boolean flag = true;
		try{
			//此处需要加入一个我们这边的主键字段
			String sql ="insert into disposition_info(tydic_dynamic_id,Title,DispositionCategory,TargetFeature_SFZHM,TargetFeature_XM,TargetFeature_CPHM,"
					+ "TargetFeature_MAC,PriorityLevel,ApplicantName,ApplicantInfo,ApplicantOrg,"
					+ "BeginTime,EndTime,CreatTime,OperateType,ReceiveMobile,Reason,DispositionRemoveOrg,"
					+ "DispositionRemovePerson,DispositionRemoveTime,DispositionRemoveReason,CreateDepartment,TargetFeature_CPYS,TargetFeature_CLLX,TargetFeature_CLYS,TargetFeature_CLPP) "
					+ "value(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
			int[] argTypes ={Types.VARCHAR,Types.VARCHAR,Types.INTEGER,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.INTEGER,Types.VARCHAR,
					Types.VARCHAR,Types.VARCHAR,Types.TIMESTAMP,Types.TIMESTAMP,Types.TIMESTAMP,Types.INTEGER,
					Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.TIMESTAMP,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR};
			Object[] args ={
					   insertDataToFh.getTydic_dynamic_id(),
					   insertDataToFh.getTitle(),
					   insertDataToFh.getDispositionCategory(),
					   insertDataToFh.getTargetFeature_SFZHM(),
					   insertDataToFh.getTargetFeature_XM(),
					   insertDataToFh.getTargetFeature_CPHM(),
					   insertDataToFh.getTargetFeature_MAC(),
					   insertDataToFh.getPriorityLevel(),
					   insertDataToFh.getApplicantName(),
					   insertDataToFh.getApplicantInfo(),
					   insertDataToFh.getApplicantOrg(),
					   insertDataToFh.getBeginTime(),
					   insertDataToFh.getEndTime(),
					   insertDataToFh.getCreatTime(),
					   insertDataToFh.getOperateType(),
					   insertDataToFh.getReceiveMobile(),
					   insertDataToFh.getReason(),
					   insertDataToFh.getDispositionRemoveOrg(),
					   insertDataToFh.getDispositionRemovePerson(),
					   insertDataToFh.getDispositionRemoveTime(),
					   insertDataToFh.getDispositionRemoveReason(),
					   insertDataToFh.getCreateDepartment(),
					   insertDataToFh.getTargetFeature_CPYS(),
					   insertDataToFh.getTargetFeature_CLLX(),
					   insertDataToFh.getTargetFeature_CLYS(),
					   insertDataToFh.getTargetFeature_CLPP()
					   };
			fhzzJdbcTemplate.update(sql, args, argTypes);
		}catch(Exception ex){
			ex.printStackTrace();
			flag = false;
		}
		return flag;
	}
	
	/**
	 * 续控操作
	 * @author 熊铸
	 *  2017年10月30日
	 */
	public boolean xuKong(String endTime,String id){
		boolean flag = true;
		try {
			String sql ="update disposition_info set endTime=? where tydic_dynamic_id =? ";
			Timestamp valueOf = Timestamp.valueOf(endTime);
			Object[] args ={valueOf,id};
			int[] argTypes ={Types.TIMESTAMP,Types.VARCHAR};
			fhzzJdbcTemplate.update(sql, args, argTypes);
		} catch (Exception e) {
			e.printStackTrace();
			flag = false;
		}
		return flag;
	}
	
	/**
	 * 撤控操作
	 * @author 熊铸
	 *  2017年10月30日
	 */
	public boolean cheKong(String DispositionRemoveReason,String id){
		boolean flag = true;
		try {
			String sql ="update disposition_info set DispositionRemoveReason=?,OperateType = ? where tydic_dynamic_id =? "; 
			Object[] args ={DispositionRemoveReason,1,id};
			int[] argTypes ={Types.VARCHAR,Types.INTEGER,Types.VARCHAR};
			fhzzJdbcTemplate.update(sql, args, argTypes);
		} catch (Exception e) {
			e.printStackTrace();
			flag = false;
		}
		return flag;
		
	}
	
	
	/**
	 * 注意车辆批量布控只有cph一个字段
	 * @param drczno  统一导入编号
	 * @param bkType  布控类型
	 * @param userinfo 用户信息
	 * @throws Exception
	 */
	public void insertFhDB(String drczno, int dispositionCategory, User userinfo) throws Exception{
		
		InsertDataToFh insertDataToFh = null;
		
		//查出同一导入批次的人员: zkno
		String queryZknoBydrczno = " select y.zkno,y.ryxm,y.rysfzh,"
				+ "y.ryzkkssj,y.ryzkjssj,y.bkyy,y.bklx,y.mac,y.rysjh,y.cph,u.jsrsj from T_ZK_RYXX t "
				+ "inner join T_ZK_RYXXB y on t.zkno=y.zkno inner join t_zk_xxjsr u on t.zkno=u.zkno where y.state='1' and t.DRCZNO=? ";
		int[] argTypesQueryZkno = {Types.VARCHAR};
		Object[] argsQueryZkno = {drczno};
		List<Map<String,Object>> zknoList = jdbcTemplate.queryForList(queryZknoBydrczno, argsQueryZkno, argTypesQueryZkno);

		String sqrxm = userinfo.getName();//申请人姓名
		String sqrdwmc = userinfo.getDepartmentName();//申请人单位名称
//		String sqrsjh = userinfo.getSj();//申请人手机号（无法获取警员手机，数据库没有）
		
		for (Map<String,Object> data : zknoList) {
			insertDataToFh = new InsertDataToFh();
			
			insertDataToFh.setApplicantName(sqrxm);//申请人姓名
			insertDataToFh.setApplicantOrg(sqrdwmc);//'申请单位'  //是单位名称
//			if(StringUtils.isNotBlank(sqrsjh) && !"null".equals(sqrsjh)){
//				insertDataToFh.setApplicantInfo(sqrsjh); //'申请人联系方式', 暂时给的是当前用户手机号(疑问，接口用户，sj号为空)
//			}
			insertDataToFh.setDispositionCategory(dispositionCategory);//'布控类别(1.人2.机动车3.WIFI)',
			
			if(dispositionCategory == 3 && data.get("mac") != null) {
				insertDataToFh.setTargetFeature_MAC(data.get("mac").toString());//'布控对象特征_MAC地址'
			}else if(dispositionCategory == 2 && data.get("cph") != null){
				insertDataToFh.setTargetFeature_CPHM(data.get("cph").toString());//'布控对象特征_机动车车牌号'
			}
			
			insertDataToFh.setTydic_dynamic_id(data.get("zkno").toString());
			if(data.get("rysfzh") != null){
				insertDataToFh.setTargetFeature_SFZHM(data.get("rysfzh").toString());//布控对象特征_人员身份证',
			}
			if(data.get("ryxm") != null && StringUtils.isNotBlank(data.get("ryxm").toString())) {
				insertDataToFh.setTargetFeature_XM(data.get("ryxm").toString());//'布控对象特征_人员姓名',
			}
			if(data.get("ryzkkssj") != null) {
				insertDataToFh.setBeginTime(data.get("ryzkkssj").toString());//'开始时间',
			}
			if(data.get("ryzkjssj") != null) {
				insertDataToFh.setEndTime(data.get("ryzkjssj").toString());//'结束时间',
			}
			if(data.get("jsrsj") != null && StringUtils.isNotBlank(data.get("jsrsj").toString())) {
				insertDataToFh.setReceiveMobile(data.get("jsrsj").toString());//'告警信息接收手机号(可填写多个手机号，用分隔符隔开)',
			}
			if(data.get("bkyy") != null && StringUtils.isNotBlank(data.get("bkyy").toString())) {
				insertDataToFh.setReason(data.get("bkyy").toString());//'布控原因',
			}
			
			insertData(insertDataToFh);
		}

	
	}
	
	
	/**
	 * 审批通过时插入数据,根据zkState ,zkno查出相关布控信息并存入烽火库
	 * @param userinfo
	 * @param zkState
	 * @param zkno
	 * @author WangChen
	 */
 	public void insertFhzzSp(User userinfo, String zkno){
 		InsertDataToFh insertDataToFh = new InsertDataToFh();
 		
 		Map<String, Object> ryxxb = bkspDao.queryByZkno(zkno);// 查询t_zk_ryxxb等布控信息
 		
 		if(ryxxb != null){
 			int dispositionCategory = 1;//布控类别
// 			Object applicantInfo = ryxxb.get("sqrxm");//申请人联系方式
 			Object applicantName = ryxxb.get("sqrxm");//申请人姓名
 			Object applicantOrg = ryxxb.get("sqrdwmc");//申请单位名称
 			
 			//告警信息接收手机号 , 默认填写当前用户手机号
 			String receiveMobile = null;
 			//两个都有为'null'的可能，审批人和申请人是两码事
			if(ryxxb.get("jsrsj") != null && StringUtils.isNotBlank(ryxxb.get("jsrsj").toString()) && !"null".equalsIgnoreCase(ryxxb.get("jsrsj").toString().trim())) {
				receiveMobile = ryxxb.get("jsrsj").toString().trim();
			}
 			
 	 		Object targetFeature_SFZHM = ryxxb.get("rysfzh");//布控对象特征_人员身份证
 	 		Object targetFeature_XM = ryxxb.get("ryxm");//布控对象特征_人员姓名
 	 		Object beginTime = ryxxb.get("ryzkkssj");//开始时间
 	 		Object endTime = ryxxb.get("ryzkjssj");//结束时间
 	 		Object reason = ryxxb.get("bkyy");//布控原因
 	 		
 	 		Object mac = ryxxb.get("mac");//MAC地址
 	
 	 		Object cph = ryxxb.get("cph");//车牌号
 	 		Object cpys = ryxxb.get("cpys");//车牌颜色  蓝黄
 	 		Object cllx = ryxxb.get("cllx");//车辆类型
 	 		Object clys = ryxxb.get("clys");//车辆颜色
 	 		Object clpp = ryxxb.get("clpp");//车辆品牌
 	 		
// 			如果是审批通过，需要往烽火库传数据
// 			if("1".equals(zkState)) {
 				
 				insertDataToFh.setTydic_dynamic_id(zkno);//存入智控id
 			
 				//数据库里无法找出申请警员的手机号码
//				if(StringUtils.isNotBlank(applicantInfo) && !"null".equalsIgnoreCase(applicantInfo.trim())){
//					insertDataToFh.setApplicantInfo(applicantInfo); 
//				}
 				
 				//布控类别
 				if("2".equals(ryxxb.get("bklx"))){
 					dispositionCategory = 3;//wifi
 					if(mac != null) {
 						insertDataToFh.setTargetFeature_MAC(mac.toString());
 					}
 				} else if("3".equals(ryxxb.get("bklx"))) {
 					dispositionCategory = 2;//车辆
 					if(cph != null) {
 						insertDataToFh.setTargetFeature_CPHM(cph.toString());//车牌号
 					}
 					if(cpys != null) {
 						insertDataToFh.setTargetFeature_CPYS(cpys.toString());//车牌颜色  蓝黄
 					}
 					if(cllx != null) {
 						insertDataToFh.setTargetFeature_CLLX(cllx.toString());//车辆类型
 					}
 					if(clys != null) {
 						insertDataToFh.setTargetFeature_CLYS(clys.toString());//车辆颜色
 					}
 					if(clpp != null) {
 						insertDataToFh.setTargetFeature_CLPP(clpp.toString());//车辆品牌
 					}
 				} else {
 					dispositionCategory = 1;//人
 				}
 				
 				insertDataToFh.setDispositionCategory(dispositionCategory);//布控类别(1.人2.机动车3.WIFI),
 				if(targetFeature_SFZHM != null) {
 					insertDataToFh.setTargetFeature_SFZHM(targetFeature_SFZHM.toString());//布控对象特征_人员身份证',
 				}
 				if(targetFeature_XM != null) {
 					insertDataToFh.setTargetFeature_XM(targetFeature_XM.toString());//'布控对象特征_人员姓名',
 				}
 				if(applicantName != null) {
 					insertDataToFh.setApplicantName(applicantName.toString());//申请人姓名
 				}
 				if(applicantOrg != null) {
 					insertDataToFh.setApplicantOrg(applicantOrg.toString());//'申请单位'  //是单位名称
 				}
				if(beginTime != null) {
					insertDataToFh.setBeginTime(beginTime.toString());//'开始时间', 					
				}
				if(endTime != null) {
					insertDataToFh.setEndTime(endTime.toString());//'结束时间',	
				}
				if(StringUtils.isNotBlank(receiveMobile)) {
					insertDataToFh.setReceiveMobile(receiveMobile);//'告警信息接收手机号(可填写多个手机号，用分隔符隔开)',	
				}
				if(reason != null && StringUtils.isNotBlank(reason.toString())) {
					insertDataToFh.setReason(reason.toString());//'布控原因',
				}
 	 					
 				insertData(insertDataToFh);
// 			}
 		}
 		
 	}
	
 	
 	
 	
	
}
