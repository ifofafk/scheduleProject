package com.zngk.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.zngk.common.constant.user.UserEmun;
import com.zngk.dto.InputPageDataDTO;
import com.zngk.dto.PersonDto;
import com.zngk.dto.PersonInfodto;
import com.zngk.dto.RyglDTO;
import com.zngk.entity.ResultGson;
import com.zngk.entity.User;
import com.zngk.exception.ServiceException;
import com.zngk.service.PersonAdService;  
 
@Api(value="personAd")  
@Controller  
@RequestMapping(value="personAd") 
/**
 * 人员信息管理
 * @author 熊铸
 *ZNGK
 * 2017年10月18日
 */
public class PersonAdController { 
	@Autowired
	private PersonAdService adService;

	private final Log logger = LogFactory.getLog(this.getClass());
	  /**
	   * 人员管理列表查询(带分页)
	   * @author 熊铸
	   *  2017年10月18日
	   */
    @RequestMapping(value = "/powerList",method=RequestMethod.POST)
    @ApiOperation(value="人员信息管理列表",httpMethod="POST",notes="人员信息管理列表",response=ResultGson.class)
    @ResponseBody
    public ResultGson powerList(@RequestBody InputPageDataDTO<RyglDTO> data,HttpSession httpSession){	
		logger.info("进入权限中");
		ResultGson resultGson= adService.powerList(httpSession, data); // 列表翻页
		
		StringBuffer powerQx = new StringBuffer();
		User user = (User) httpSession.getAttribute("userinfo");
		if(user == null) {
			throw new ServiceException(UserEmun.SESSION_EXPIRES.getCode(),UserEmun.SESSION_EXPIRES.getDesc());
		}
		@SuppressWarnings("rawtypes")
		List list = user.getRoleList();
		if(list != null && !list.isEmpty()) {
			for(Object one : list){
				powerQx.append(one.toString());
			}
		}
		logger.info("当前的用户:   角色=" + powerQx + "用户信息=" + user.getAccount() + "," + user.getName() +","+ user.getDepartmentName() + "," + user.getDlip());
		return resultGson;
    }
 /**
  * 用户编辑保存操作
  * @author 熊铸
  *  2017年10月18日
  */
 	@RequestMapping(value = "/personUpdate",method=RequestMethod.POST)
 	@ApiOperation(value="用户编辑操作",httpMethod="POST",notes="用户编辑操作",response=ResultGson.class)
    @ResponseBody
 	public ResultGson personUpdate(@RequestBody PersonDto personDto, HttpSession httpSession) {
 		
 		ResultGson gson = new ResultGson();
 		gson.setSuccess(true);
 		// 调用保存的方法
 		int result = adService.personUpdate(personDto, httpSession);
 		if(result == 9){
 			gson = gson.error400("该警号已存在");
 		}
 		if(result == 1){
 			return ResultGson.ok("用户编辑成功");
 		}
 		return gson;
 	}
 	/**
 	 * 密码修改
 	 * @author 熊铸
 	 *  2017年10月18日
 	 */
  	@RequestMapping(value = "/changeKey")
  	@ApiOperation(value="密码修改",httpMethod="GET",notes="密码修改",response=ResultGson.class)
  	@ResponseBody
  	public ResultGson changeKl(HttpSession httpSession,@RequestParam(value="yhm") String yhm,@RequestParam(value="kl") String kl,
  			@RequestParam(value="type") String type) throws IOException {
  		ResultGson resultObject = new ResultGson();
  		resultObject.setStatus(ResultGson.SUCCESS_CODE);
  		//用户名
  		//密码
  		//修改类型  0:初始化密码11   1:修改为用户指定密码
  		
  		if(StringUtils.isBlank(kl) && "1".equals(type)) {
  			resultObject.setSuccess(true);
  			resultObject.setMsg("密码不能为空!");
  			return resultObject;
  		}
  		
  		int flag = adService.changeKl(yhm, kl, type,httpSession);
  		if(flag == 1) {
  			//移除登陆状态
  			httpSession.removeAttribute("userinfo");
	  		return ResultGson.ok();
  		}
  		return resultObject;
  	}
  	
    /**
     * 权限用户新增的保存
     * @author 熊铸
     *  2017年10月18日
     */
    @RequestMapping(value = "/personSave",method = RequestMethod.POST)
    @ApiOperation(value="用户新增的保存",httpMethod="POST",notes="用户新增的保存",response=ResultGson.class)
    @ResponseBody
    public ResultGson personSave(HttpSession httpSession,@RequestBody PersonInfodto personInfodto) {		
    	ResultGson gson = new ResultGson();
    	gson.setSuccess(true);
    	// 调用保存的方法
		int result = adService.personSave(personInfodto, httpSession);
		if(result == 9){
			gson = gson.error400("该警号已存在");
		}
		if(result == 1){
			return ResultGson.ok("用户注册成功");
		}
		
		return gson;
    }
}  