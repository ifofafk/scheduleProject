<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-autowire="byName">
	
	<!-- 获取配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		<list>
			<value>classpath:/jdbc.properties</value>
			<!-- <value>classpath:/public.pro</value> -->
		</list>
		</property>
	</bean>

	<!-- qkcg_demo数据源 -->
	<bean id="qkcgJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="qkcgDataSource" />
		</property>
	</bean>
	<bean id="qkcgDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${qkcg_demo.driverName}" />
		<property name="url" value="${qkcg_demo.url}" />
		<property name="username" value="${qkcg_demo.username}" />
		<property name="password" value="${qkcg_demo.password}" />
        <property name="initialSize" >
        	<value>${qkcg_demo.initialSize}</value>
        </property>
        <property name="maxIdle" value="5" />    
        <property name="minIdle" value="5" />    
        <property name="maxActive" value="10" />    
        <property name="removeAbandoned" value="true" />    
        <property name="removeAbandonedTimeout" value="180" />   
        <property name="maxWait" value="3000" />   
        <property name="defaultAutoCommit" value="true" />  
        <property name="validationQuery">    
            <value>SELECT 1</value>    
         </property>    
        <property name="testOnBorrow">    
            <value>true</value>    
        </property>    
        <property name="testOnReturn">    
            <value>false</value>    
        </property>  
	</bean>
	<bean id="qkcgDataSourceTransactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <constructor-arg ref="qkcgDataSource" />  
    </bean> 
	<bean id="qkcgTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">  
        <constructor-arg ref="qkcgDataSourceTransactionManager" />  
    </bean> 

	<tx:annotation-driven transaction-manager="qkcgDataSourceTransactionManager" />
	<!-- qkcg数据源 -->
	
	
	<!-- 1.oracle数据库配置示例 -->
	<!-- 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${datasource.maxActive}" />
		<property name="maxIdle" value="${datasource.maxIdle}" />
		<property name="maxWait" value="${datasource.maxWait}" />
		<property name="defaultAutoCommit" value="${datasource.defaultAutoCommit}" />
		<property name="removeAbandoned" value="${datasource.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${datasource.removeAbandonedTimeout}" />
	</bean>
	<bean id="dataSourceTransactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <constructor-arg ref="dataSource" />  
    </bean> 

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">  
        <constructor-arg ref="dataSourceTransactionManager" />  
    </bean> 

	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />
	 -->
	
	
	<!-- 通过该注入，可以使该类获取整个spring容器，因此可以获取任何容器中的bean -->
	<!-- <bean class="com.zngk.util.BeanFactory" autowire="byName"></bean> -->
</beans>